0xffff0000 0x0000ffff AND 0x00000000 1 0  // each line contains 1 case: {a b OP result [zero overflow]} separated by space
0x3113c398 0x088e4954  OR 0x399fcbdc 0 0  // numbers `a`, `b`, `result` can be hex(0x), binary(0b) or decimal
        -1          1 ADD          0 1 0  // `OP` must be either AND, OR, ADD, SUB, SLT or NOR
0x7eda5023 0x2ec36ae5 SUB 0x5016e53e 0 0  // `zero` and `overflow` must be either 0 or 1
0x7eda5023 0x2ec36ae5 SUB 0x5016e53e      // `zero` and `overflow` can be null (only test `result`)
        -1          1 SLT          1 0 0
0x00000000 0x00000000 NOR 0xffffffff 0 0  // try to add your own case!
0x40000000 0x40000000 ADD 0x80000000 0 1  //overflow
0x80000000 0x80000000 ADD 0x00000000 1 1  //overflow and zero detection
0x7fffffff 0xffffffff SUB 0x80000000 0 1  //overflow
0x7fffffff 0x7fffffff SLT 0 1 0           //SLT =
0x7fffffff 0xffffffff SLT 0 1 0           //SLT >
0x80000000 0x00000001 SLT 1 0 0           //SLT <



0x7fffffff 0x7fffffff ADD 0xfffffffe 0 1 //????用例中，???入都是全 1 的二?制?，表示正? 2147483647。根据有符?整?的加法??，??正?相加??生一?更大的正?，并且?果?溢出，因此?出? 0xFFFFFFFE。由于?果不?零，所以零?志位 zero 被?置? 0，而且?生了溢出，所以溢出?志位 overflow 被?置? 1。
0x80000000 0x00000000 SLT 1 0 0
0x80000000 0x00000001 SLT 1 0 0
0x7fffffff 0x00000001 SLT 0 1 0
0x7fffffff 0x7fffffff SLT 0 1 0
0x7fffffff 0xffffffff SLT 0 1 0
0xffffffff 0x7fffffff SLT 1 0 0
0xffffffff 0x80000000 SLT 0 1 0
0xffffffff 0xffffffff SLT 0 1 0
0xffffffff 0x00000000 SLT 1 0 0
0xffffffff 0x00000001 SLT 1 0 0
0x80000000 0x00000000 NOR 0x7fffffff 0 0
0x80000000 0x00000001 NOR 0x7ffffffe 0 0
0x00000000 0x00000000 NOR 0xffffffff 0 0
0xffffffff 0x00000001 ADD 0x00000000 1 0
0x40000000 0x40000000 SUB 0x00000000 1 0
0x40000000 0x00000001 SUB 0x3fffffff 0 0
0x7fffffff 0x7fffffff SUB 0x00000000 1 0
0x80000000 0x00000001 SUB 0x7fffffff 0 1
0x80000000 0x80000000 SUB 0x00000000 1 0
0xffffffff 0xffffffff SUB 0x00000000 1 0
0xffffffff 0x80000000 SUB 0x7fffffff 0 0
0x00000001 0x00000001 SUB 0x00000000 1 0
0x00000000 0x00000001 SUB 0xffffffff 0 0
0xffffffff 0x00000001 SUB 0xfffffffe 0 0
0x7fffffff 0x00000001 SUB 0x7ffffffe 0 0
0x80000000 0xffffffff SUB 0x80000001 0 0
0x00000001 0x00000001 AND 0x00000001 0 0
0xffffffff 0xffffffff AND 0xffffffff 0 0
0xaaaaaaaa 0x55555555 AND 0x00000000 1 0
0xaaaaaaaa 0xaaaaaaaa AND 0xaaaaaaaa 0 0
0xaaaaaaaa 0xffffffff AND 0xaaaaaaaa 0 0
0xffffffff 0x00000001 AND 0x00000001 0 0
0xaaaaaaaa 0x55555555 OR 0xffffffff 0 0
0xffffffff 0xffffffff OR 0xffffffff 0 0
0xaaaaaaaa 0x55555555 OR 0xffffffff 0 0
0xaaaaaaaa 0xaaaaaaaa OR 0xaaaaaaaa 0 0
0xaaaaaaaa 0xffffffff OR 0xffffffff 0 0
0xffffffff 0x00000001 OR 0xffffffff 0 0
0xffffffff 0x00000001 NOR 0x00000000 1 0
0xffffffff 0xffffffff NOR 0x00000000 1 0
0xaaaaaaaa 0x55555555 NOR 0x00000000 1 0
0xaaaaaaaa 0xaaaaaaaa NOR 0x55555555 0 0
0xaaaaaaaa 0xffffffff NOR 0x00000000 1 0
0xffffffff 0x00000001 NOR 0x00000000 1 0
0x00000001 0xffffffff SLT 0 1 0
0xffffffff 0xffffffff SLT 0 1 0
0x00000000 0xffffffff SLT 0 1 0
0xffffffff 0x00000000 SLT 1 0 0
